// Code generated by mockery v2.23.1. DO NOT EDIT.

package repository

import (
	domain "hte-danger-zone-job/internal/domain"

	mock "github.com/stretchr/testify/mock"
)

// MockDangerZoneRepository is an autogenerated mock type for the DangerZoneRepository type
type MockDangerZoneRepository struct {
	mock.Mock
}

// GetBydeviceID provides a mock function with given fields: deviceID
func (_m *MockDangerZoneRepository) GetByDeviceID(deviceID string) (*domain.DangerZone, error) {
	ret := _m.Called(deviceID)

	var r0 *domain.DangerZone
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*domain.DangerZone, error)); ok {
		return rf(deviceID)
	}
	if rf, ok := ret.Get(0).(func(string) *domain.DangerZone); ok {
		r0 = rf(deviceID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.DangerZone)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(deviceID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockDangerZoneRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockDangerZoneRepository creates a new instance of MockDangerZoneRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockDangerZoneRepository(t mockConstructorTestingTNewMockDangerZoneRepository) *MockDangerZoneRepository {
	mock := &MockDangerZoneRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
