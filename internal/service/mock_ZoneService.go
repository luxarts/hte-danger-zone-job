// Code generated by mockery v2.23.1. DO NOT EDIT.

package service

import (
	domain "hte-danger-zone-job/internal/domain"

	mock "github.com/stretchr/testify/mock"
)

// MockZoneService is an autogenerated mock type for the ZoneService type
type MockZoneService struct {
	mock.Mock
}

// Verify provides a mock function with given fields: deviceID, p
func (_m *MockZoneService) Verify(deviceID string, p *domain.Payload) error {
	ret := _m.Called(deviceID, p)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, *domain.Payload) error); ok {
		r0 = rf(deviceID, p)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewMockZoneService interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockZoneService creates a new instance of MockZoneService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockZoneService(t mockConstructorTestingTNewMockZoneService) *MockZoneService {
	mock := &MockZoneService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
